[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "claude-jester-mcp"
version = "2.1.0"
description = "Transform Claude into a thinking, testing programming partner"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Matthew Stanton", email = "mrstanton91@gmail.com" },
    { name = "Enterprise Security Team", email = "security@company.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: Security",
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.7.0",
    "pydantic>=2.4.2",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "tenacity>=8.2.0",
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    "jsonschema>=4.20.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.1",
    "mypy>=1.7.0",
    "black>=23.10.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pre-commit>=3.5.0",
    "multiprocess>=0.70.15",
    "docker>=6.1.3",
    "psutil>=5.9.0",
    "python-jose>=3.3.0",
    "passlib>=1.7.4",
    "bcrypt>=4.0.1",
    "argon2-cffi>=23.1.0",
    "mcp-sdk>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.1",
    "mypy>=1.7.0",
    "black>=23.10.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pre-commit>=3.5.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://github.com/mstanton/claude-jester-mcp"
Documentation = "https://github.com/mstanton/claude-jester-mcp#readme"
Repository = "https://github.com/mstanton/claude-jester-mcp.git"
Issues = "https://github.com/mstanton/claude-jester-mcp/issues"
Discussions = "https://github.com/mstanton/claude-jester-mcp/discussions"

[project.scripts]
claude-jester = "claude_jester_mcp.cli:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=claude_jester_mcp --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "docs.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.isort]
known-first-party = ["claude_jester_mcp"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.safety]
ignore = [] 